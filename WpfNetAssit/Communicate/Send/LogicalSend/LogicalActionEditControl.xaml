<UserControl x:Class="WpfNetAssit.Communicate.Send.LogicalSend.LogicalActionEditControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfNetAssit.Communicate.Send.LogicalSend" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:baseaction="clr-namespace:WpfNetAssit.LogicalAction.BaseAction" xmlns:controlaction="clr-namespace:WpfNetAssit.LogicalAction.ControlAction" xmlns:judgmentaction="clr-namespace:WpfNetAssit.LogicalAction.JudgmentAction"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid>
        <Grid.Resources>
            <DataTemplate DataType="{x:Type controlaction:ForControlActionParam}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="循环次数：" VerticalAlignment="Center"></TextBlock>
                    <TextBox MinWidth="100" VerticalAlignment="Center" Text="{Binding Count, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type controlaction:RetryControlActionParam}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="重试次数：" VerticalAlignment="Center"></TextBlock>
                    <TextBox MinWidth="100" VerticalAlignment="Center" Text="{Binding Count, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type controlaction:DisorderControlActionParam}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="是否乱序：" VerticalAlignment="Center"></TextBlock>
                    <ToggleButton MinWidth="100" VerticalAlignment="Center" IsChecked="{Binding IsDisorder, UpdateSourceTrigger=PropertyChanged}"></ToggleButton>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type controlaction:PickControlActionParam}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="是否随机：" VerticalAlignment="Center"></TextBlock>
                    <ToggleButton MinWidth="100" VerticalAlignment="Center" IsChecked="{Binding IsDisorder, UpdateSourceTrigger=PropertyChanged}"></ToggleButton>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type controlaction:OperatorControlActionParam}">
                <StackPanel>
                    <TextBlock Text="与或非组：" VerticalAlignment="Center"></TextBlock>
                    <StackPanel Orientation="Horizontal" Margin="4">
                        <RadioButton IsChecked="{Binding IsAnd}" Content="与" Style="{StaticResource MaterialDesignTabRadioButton}" Margin="4"/>
                        <RadioButton IsChecked="{Binding IsOr}" Content="或" Style="{StaticResource MaterialDesignTabRadioButton}" Margin="4"/>
                        <RadioButton IsChecked="{Binding IsNot}" Content="非" Style="{StaticResource MaterialDesignTabRadioButton}" Margin="4"/>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type baseaction:SendActionParam}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="发送数据：" Style="{DynamicResource MaterialDesignBody1TextBlock}" VerticalAlignment="Center"></TextBlock>
                        <TextBox MinWidth="100" MaxWidth="300" TextWrapping="Wrap" AcceptsReturn="True" VerticalAlignment="Center" Text="{Binding Data, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton Style="{DynamicResource MaterialDesignSwitchToggleButton}" Margin="5" VerticalAlignment="Center" IsChecked="{Binding IsPlusR}"></ToggleButton>
                        <TextBlock Text="附加\r" Style="{DynamicResource MaterialDesignBody1TextBlock}" Margin="5" VerticalAlignment="Center"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton Style="{DynamicResource MaterialDesignSwitchToggleButton}" Margin="5" VerticalAlignment="Center" IsChecked="{Binding IsPlusN}"></ToggleButton>
                        <TextBlock Text="附加\n" Style="{DynamicResource MaterialDesignBody1TextBlock}" Margin="5" VerticalAlignment="Center" ></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="首部附加Hex:" Style="{DynamicResource MaterialDesignBody1TextBlock}" Margin="5" VerticalAlignment="Center" ></TextBlock>
                        <TextBox Style="{DynamicResource MaterialDesignTextBox}" VerticalAlignment="Center" MinWidth="100" MaxWidth="300" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding HeadAppendHex, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="尾部附加Hex:" Style="{DynamicResource MaterialDesignBody1TextBlock}" Margin="5" VerticalAlignment="Center" ></TextBlock>
                        <TextBox Style="{DynamicResource MaterialDesignTextBox}" VerticalAlignment="Center" MinWidth="100" MaxWidth="300" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding TailAppendHex, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </StackPanel>

                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type baseaction:RecvActionParam}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="接收超时：" VerticalAlignment="Center"></TextBlock>
                    <TextBox MinWidth="100" VerticalAlignment="Center" Text="{Binding Timeout, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    <TextBlock Text=" ms" VerticalAlignment="Center"></TextBlock>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type baseaction:SleepActionParam}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="休眠：" VerticalAlignment="Center"></TextBlock>
                    <TextBox MinWidth="100" VerticalAlignment="Center" Text="{Binding SleepMs, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    <TextBlock Text=" ms" VerticalAlignment="Center"></TextBlock>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type judgmentaction:CheckStringActionParam}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton Style="{DynamicResource MaterialDesignSwitchToggleButton}"
                                      IsChecked="{Binding IsHaveOrNot}" Content="不包含">
                            <materialDesign:ToggleButtonAssist.OnContent>
                                <TextBlock Text="包含"></TextBlock>
                            </materialDesign:ToggleButtonAssist.OnContent>
                        </ToggleButton>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="字符串：" VerticalAlignment="Center"></TextBlock>
                        <TextBox MinWidth="100" VerticalAlignment="Center" Text="{Binding TargetString, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
        </Grid.Resources>
        <ContentControl Margin="10" Content="{Binding}"></ContentControl>
    </Grid>
</UserControl>
