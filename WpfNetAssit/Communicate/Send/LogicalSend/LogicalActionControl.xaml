<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:command="http://www.galasoft.ch/mvvmlight" xmlns:local="clr-namespace:WpfNetAssit.Communicate.Send.LogicalSend"
             xmlns:Converter="clr-namespace:WpfNetAssit.Converter" x:Class="WpfNetAssit.Communicate.Send.LogicalSend.LogicalActionControl"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Converter:VisibilityConverter x:Key="VisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal">
            <TextBlock Style="{DynamicResource MaterialDesignCaptionTextBlock}" Text="执行序列" VerticalAlignment="Center"/>
            <Button BorderThickness="0" Style="{DynamicResource MaterialDesignFlatButton}" Command="{Binding AddActionCommand}">
                <materialDesign:PackIcon Kind="Add" />
            </Button>
            <Button  BorderThickness="0" Style="{DynamicResource MaterialDesignFlatButton}" IsEnabled="{Binding IsItemSelected}" Command="{Binding DeleteActionCommand}">
                <materialDesign:PackIcon Kind="Minus" />
            </Button>
            <Button  BorderThickness="0" Style="{DynamicResource MaterialDesignFlatButton}" IsEnabled="{Binding RootAction.ChildActions.Count}" Command="{Binding DeleteAllActionsCommand}">
                <materialDesign:PackIcon Kind="DeleteEmpty" />
            </Button>
        </StackPanel>
        <TreeView x:Name="ActionTree" Grid.Row="1" AllowDrop="True" ItemsSource="{Binding RootAction.ChildActions}" Style="{DynamicResource MaterialDesignTreeView}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <command:EventToCommand Command="{Binding SelectedItemChangedCommand}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding ChildActions}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding Param.Info}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <materialDesign:PackIcon Kind="Set" Margin="2" Visibility="{Binding IsContainer, Converter={StaticResource VisibilityConverter}}" VerticalAlignment="Center"/>

                        <materialDesign:PopupBox StaysOpen="True">
                            <materialDesign:PopupBox.ToggleContent>
                                <materialDesign:PackIcon Kind="edit"/>
                            </materialDesign:PopupBox.ToggleContent>
                            <local:LogicalActionEditControl DataContext="{Binding Param}"></local:LogicalActionEditControl>
                        </materialDesign:PopupBox>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>
